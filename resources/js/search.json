[[{"l":"Getting Started","p":["Rootlenses, is a all-in-one solution for streamlined data analytics and visualization. Unleash the power of insightful decision-making with our cutting-edge software that offers a robust selection of customizable templates for generating dynamic data analytics dashboards. Whether you're a seasoned data professional or a newcomer to analytics, RootLenses simplifies the process, allowing you to transform raw data into actionable insights effortlessly."]},{"l":"How it works","p":["Rootlenses consists of two main parts:","Connector: The data connector seamlessly integrates a pre-built suite of tools, harnessing the power of AWS Glue to extract valuable insights from a variety of popular data sources and vendors. This sophisticated system not only extracts information but also meticulously transforms and prepares the data, ensuring it is primed for data analysis.","Dashboards: We've curated a collection of commonly used metrics and data analytics dashboards that leverage the extracted data to offer enhanced visualizations of business data, facilitating more informed decision-making."]}],[{"l":"Architecture","p":["Rootlenses consists of two main parts:","Connector: The data connector seamlessly integrates a pre-built suite of tools, harnessing the power of AWS Glue to extract valuable insights from a variety of popular data sources and vendors. This sophisticated system not only extracts information but also meticulously transforms and prepares the data, ensuring it is primed for data analysis.","Connectors","Dashboards: We've curated a collection of commonly used metrics and data analytics dashboards that leverage the extracted data to offer enhanced visualizations of business data, facilitating more informed decision-making.","Dashboards"]},{"l":"High level components","p":["High level architecture components"]},{"l":"Data Layer","p":["Depending on the selected data source, we offer specific connectors tailored to accommodate the unique requirements of each. These diverse data sources necessitate distinct methodologies for extracting the relevant information. Consequently, this diversity is mirrored in the configuration settings for each connector. For instance, certain connectors may demand database connection details, others may require API keys, while some may rely on FTP access for obtaining CSV files."]},{"l":"Transformation Layer","p":["This is a tool based services avilable in AWS. The Transformation layer is build using AWS Glue. We have developed different processes:"]},{"l":"Visualization Layer","p":["Tala de candidtos por pais"]}],[{"l":"Data Connector Architecture"},{"l":"Overview","p":["This document details the architecture of the Data Connector, an integrated solution designed to extract, transform, and prepare data for analysis. Utilizing the power of AWS Glue along with a pre-built suite of tools, the connector interacts with a variety of data sources and vendors, optimizing data for analysis."]},{"l":"Key Components"},{"l":"AWS Glue Crawlers and Jobs","p":["Description: AWS Glue is the central component of the connector, used for connecting with various data sources. Glue Crawlers detect and catalog data, while Glue Jobs handle the tasks of transforming and preparing the data.","CDK Configuration:","Setup and deployment of Glue Crawlers and Jobs using AWS CDK.","Definition of ETL scripts specifying the transformation logic."]},{"l":"Amazon S3 Buckets","p":["Description: S3 buckets act as the primary storage for the extracted and transformed data. They serve as secure and scalable repositories to store data at different stages of the ETL process.","CDK Configuration:","Creation of buckets to store input and output data.","Implementation of security and access policies."]},{"l":"IAM Roles","p":["Description: IAM roles provide the necessary security framework to manage access to AWS resources used by the connector.","CDK Configuration:","Creation of roles with specific permissions for Glue, S3, and other necessary integrations."]},{"l":"Component Interaction","p":["Data Extraction: Glue Crawlers interact with various data sources to detect and catalog information.","Transformation and Preparation: Glue Jobs apply transformation logics, preparing data for analysis and storing it in S3 buckets.","Access and Security Management: IAM roles ensure that all operations are carried out within a controlled and secure environment."]},{"l":"Best Practices and Security","p":["Implementation of IAM policies to minimize permissions and maximize security.","Use of best practices for data management in S3, including encryption and access restriction."]},{"l":"Advanced Data Processing Features","p":["Data Quality Checks: Implementing automated data quality checks within Glue jobs to ensure data integrity.","Data Partitioning and Optimization: Techniques for optimizing data storage and retrieval in S3, utilizing partitioning strategies."]},{"l":"Configuration Management","p":["JSON-Based Configuration: Utilizing a JSON file ( json_extract/config.json) to manage various configurations related to AWS resources and data processing logic.","Dynamic Configuration: Scripts and CDK setups are designed to dynamically adapt to changes in the JSON configuration file, ensuring flexibility and scalability."]},{"i":"cicd-integration","l":"CI/CD Integration","p":["Automated Deployment: Integrating the project with CI/CD pipelines for automated testing and deployment of infrastructure changes.","Version Control: Best practices in version controlling the infrastructure code and configurations."]},{"l":"Architecture Diagram","p":["[Include architecture diagram here]","The diagram will illustrate how the Data Connector integrates AWS Glue, S3, and IAM to provide a complete ETL solution.","Deployment"]}],[{"l":"Dashboards","p":["This is list of the main topics and dashboards availables:","Human Resources Sales"]}],[{"l":"Human Resources"},{"l":"Salaries per Country","p":["Provides salaries per position per country supporting date ranges and countries comparisons.","Salary analysis by position, divided by country","Row: Position","Columns: Country","Internal Columns:","Min Salary: Min Salary between this position Max Salary: Maximum Salary between that position Median Salary: Median of the total salaries Additionally, when opening a position, you can see the ID of the workflow of the person with those salaries.","Filters:","Salaries per country sample"]},{"l":"Candidates per Country","p":["Graphical map of Rootstack worker concentration, the higher the concentration of workers, the bigger the circles.","Filters:","Salaries per country sample"]},{"l":"Salary ask over periods of time"},{"l":"Number of jobs created over time per category","p":["Number of jobs created in a period of time, the graph will show monthly in which areas there is the highest concentration of jobs.","Filters:","Number Jobs by role"]},{"l":"Number of jobs created over time per Role","p":["Number of jobs created in a period of time, the graph will show monthly in which roles there is the highest concentration of jobs. Number Jobs"]},{"l":"Highest priority Jobs","p":["Graph showing by role, which roles have higher priority, higher visibility and how many roles are normally opened. Highest Jobs"]},{"l":"Recruitment phases","p":["Informative table where it is averaged how many days each phase lasts, when a phase is ungated, it shows a list of worflow ids","Filters:"]},{"l":"Persons"},{"l":"Total Persons","p":["Graph of the total number of people in Rootstack grouped by their role","Filters:"]},{"l":"Total Persons Active","p":["Graph of the total number of people active in Rootstack grouped by their role Total Persons Active"]},{"l":"Ability Scores","p":["Table where the different skills that Rootstack has are shown, in addition to the average score between each skill, its average and its minimum, additionally when a skill is displayed, you can see the roles that have this skill. Ability Scores"]},{"l":"Total number of people by skills","p":["Graph showing the total number of people with similar skills. Total number of people by skills"]},{"l":"Skill level","p":["Table listing the skills that Rootstack has, as well as how many people we have in the following classificationÃ‘","Low: His skill score is between 0 and 3.","Medium: His skill score is between 4 and 7","Hight: His skill score is higher than 7","And finally, the number of people with the skill is totaled. Skill level"]},{"l":"Skill level by person","p":["Table where you can see, which skills each role has and also classified as follows","Low: Your skill score is between 0 and 3.","Medium: Your skill score is between 4 and 7.","High: Your skill score is higher than 7. Skill level by person"]}],[{"l":"Sales"}],[{"l":"Rootnet","p":["Rootstack: Toda la metada","No se estan corriendo automaticamente los jobs","ETL Data","Ver si tiene sentido separar diferents workflows existentes","Salary per Country: Primary Role","Employees per country (Candidates per country)"]}],[{"l":"AWS CDK Setup"},{"l":"Overview","p":["This document outlines the steps to set up and work with the AWS Cloud Development Kit (CDK) in an existing project. AWS CDK simplifies creating, managing, and deploying AWS resources using familiar programming languages."]},{"l":"Prerequisites","p":["Before proceeding, ensure you have the following:","Node.js (>= 10.3)","Python (>= 3.6)","AWS Command Line Interface (CLI)","An AWS account and an IAM user with the necessary permissions"]},{"l":"Installing AWS CDK","p":["Install Node.js: Download and install Node.js from nodejs.org.","Install AWS CDK: Run the following command to install AWS CDK globally:","Verify installation: Run the following command to verify that AWS CDK is installed correctly:"]},{"l":"Configuring AWS Credentials","p":["Create IAM user: Create an IAM user with the necessary permissions to access AWS resources. For more information, see Creating an IAM User in Your AWS Account.","Configure AWS CLI: If not already done, run:","Enter the access key ID and secret access key of the IAM user created in the previous step. You can also specify the default region and output format."]},{"l":"Cloning the Repository","p":["Clone the Project: If the CDK project is hosted in a version control system (like Git), clone the repository to your local machine."]},{"l":"Initializing the CDK Project","p":["To manually create a virtualenv on MacOS and Linux:","After the init process completes and the virtualenv is created, you can use the following step to activate your virtualenv.","If you are a Windows platform, you would activate the virtualenv like this:","Once the virtualenv is activated, you can install the required dependencies.","At this point you can now synthesize the CloudFormation template for this code."]},{"l":"Set config file for the project","p":["This file is important contains key configurations, including bucket names, database settings, and specific mappings. Set json configuration"]},{"l":"CDK Bootstrap","p":["The bootstrap process prepares your AWS environment for use with AWS CDK applications. It creates the necessary resources in AWS for deploying your application."]},{"l":"Executing Bootstrap","p":["To perform the bootstrap, run the following command in your terminal:","Replace ACCOUNT_ID with your AWS account ID and REGION with the region you want to work in."]},{"l":"CDK Deploy","p":["The cdk deploy command is used to deploy your CDK application to AWS. This will create or update resources defined in your stack."]},{"l":"Deploying a Stack","p":["To deploy a specific stack, use the command:"]},{"l":"Deploying Specific Stacks","p":["In your CDK application, you may have multiple stacks defined. Here's how to deploy each of the specific stacks in your project."]},{"l":"Deploy_bucket","p":["The Deploy_bucket stack is used to create and configure an S3 bucket.","To deploy this stack, run:"]},{"l":"CreateCatalogDatabase","p":["The CreateCatalogDatabase stack is responsible for creating a catalog database in AWS Glue.","To deploy this stack, run:"]},{"l":"SetETLJob","p":["The CdkAwsProjectStack may contain various configurations for your AWS project.","To deploy this stack, run:"]},{"l":"Useful commands","p":["cdk ls list all stacks in the app","cdk synth emits the synthesized CloudFormation template","cdk deploy deploy this stack to your default AWS account/region","cdk diff compare deployed stack with current state","cdk docs open CDK documentation"]}],[{"l":"ETL Project Documentation"},{"l":"Overview","p":["This document details how the configurations defined in a JSON file are utilized in the ETL (Extract, Transform, Load) scripts of the project. The JSON file serves as a centralized source for variables and settings used throughout the project."]},{"l":"JSON File Location","p":["The configuration settings are stored in the following file:","File Path: json_extract/config.json","This file contains key configurations, including bucket names, database settings, and specific mappings."]},{"l":"JSON Configuration","p":["The JSON file provides key configurations, including bucket names, database settings, and specific mappings. Here is a summary of its contents:","Bucket Name: name of bucket","Catalog Name: name of catalog","Account ID: account id","Additional Configurations for specific jobs and mappings."]},{"l":"Using Configurations in ETL Scripts"},{"l":"Person Job","p":["Database Configurations:","role: Used to access the community_role table in the rootstack_intranet database.","list_items: Used to access the list_items table in the rootstack_master database.","Additional Configurations for specific jobs and mappings."]},{"l":"Seniority","p":["Seniority Map:","Defines mappings for seniority, such as Junior to Junior, CEO to Executive.","Database Configurations:","persons: Configurations for accessing the persons table.","community_role: Configurations for accessing community roles.","Additional Configurations for specific jobs and mappings."]},{"l":"Workflow","p":["Database Configurations:","workflow_status: Access to the workflow status table.","workflow_type_status: Access to the workflow type status table.","Additional Configurations for specific jobs and mappings."]},{"l":"Jobs and Rootstack","p":["Database Configurations:","Currently, there are no specific configurations defined under jobs and rootstack."]},{"l":"Implementation of ETL Scripts","p":["Each ETL script will use these configurations to access and manipulate data in the corresponding databases and buckets. The scripts should be designed to be dynamic and adaptable to changes in these configurations."]},{"l":"Conclusion","p":["This documentation provides a clear guide on how the JSON file configures and feeds into the ETL scripts in the project. It ensures centralized and consistent management of important variables and settings."]}]]